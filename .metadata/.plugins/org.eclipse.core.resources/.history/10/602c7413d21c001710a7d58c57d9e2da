package com.mercury.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.sql.DataSource;

import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.orm.hibernate3.HibernateTemplate;
import org.springframework.stereotype.Repository;

import com.mercury.beans.Card;
import com.mercury.beans.Person;
import com.mercury.dao.PersonDao;

@Repository
public class PersonDaoImpl implements PersonDao{
	private JdbcTemplate template;
	
	@Autowired
	public void setDataSource(DataSource dataSource) {
		template =  new JdbcTemplate(dataSource);
	}
	@Override
	public Person findByUsername(String username) {
		// TODO Auto-generated method stub
		String sql="select username, password, authority from users u, user_roles ur "
				+ "where u.user_id = ur.user_id and (username=? or username=?)";
		String username2= username;
		int index = username.indexOf("@");
		if(index<0) username2 += "@gmail.com";
		else username2 = username2.substring(0, index);
		Object[] params = {username, username2};
		//be careful of final
		final Person person = new Person();
		template.query(sql, new RowMapper<Person>() {
			@Override
			public Person mapRow(ResultSet rs, int line) throws SQLException {
				// TODO Auto-generated method stub
				person.setUsername(rs.getString("username"));
				person.setPassword(rs.getString("password"));
				person.addAuthority(rs.getString("authority"));
				return null;
			}
		}, params);
		return person;
	}
	
}
